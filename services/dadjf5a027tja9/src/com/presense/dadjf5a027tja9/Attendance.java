/*Copyright (c) 2015-2016 presense@presense.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with presense@presense.com*/

package com.presense.dadjf5a027tja9;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;




/**
 * Attendance generated by hbm2java
 */
@Entity
@Table(name="attendance"
    ,schema="public"
)
public class Attendance  implements java.io.Serializable
 {


private long attendanceId;
private Date lasttime;
private Date totaltime;
private Event event;
private Person person;

    public Attendance() {
    }



     @Id 

    

    @Column(name="attendance_id", nullable=false)
    public long getAttendanceId() {
        return this.attendanceId;
    }
    
    public void setAttendanceId(long attendanceId) {
        this.attendanceId = attendanceId;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="lasttime", length=29)
    public Date getLasttime() {
        return this.lasttime;
    }
    
    public void setLasttime(Date lasttime) {
        this.lasttime = lasttime;
    }

    @Temporal(TemporalType.TIMESTAMP)

    @Column(name="totaltime", length=29)
    public Date getTotaltime() {
        return this.totaltime;
    }
    
    public void setTotaltime(Date totaltime) {
        this.totaltime = totaltime;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="attendances_event", nullable=false)
    public Event getEvent() {
        return this.event;
    }
    
    public void setEvent(Event event) {
        this.event = event;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="attendances_person", nullable=false)
    public Person getPerson() {
        return this.person;
    }
    
    public void setPerson(Person person) {
        this.person = person;
    }



public boolean equals(Object o) {
         if (this == o)
         return true;
		 if ( (o == null ) )
		 return false;
		 if ( !(o instanceof Attendance) )
		 return false;

		 Attendance that = ( Attendance ) o;

		 return (this.getAttendanceId()==that.getAttendanceId());

   }

   public int hashCode() {
         int result = 17;

         result = 37 * result + (int) this.getAttendanceId();

         return result;
     }


}

