/*Copyright (c) 2015-2016 presense@presense.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with presense@presense.com*/

package com.presense.dadjf5a027tja9;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;




/**
 * Manager generated by hbm2java
 */
@Entity
@Table(name="manager"
    ,schema="public"
)
public class Manager  implements java.io.Serializable
 {


private String username;
private String name;
private String password;
private String role;
private Set<Eventmanager> eventmanagers = new HashSet<Eventmanager>(0);

    public Manager() {
    }



     @Id 

    

    @Column(name="username", nullable=false)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }

    

    @Column(name="name")
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    

    @Column(name="password")
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    

    @Column(name="role", nullable=false, length=10)
    public String getRole() {
        return this.role;
    }
    
    public void setRole(String role) {
        this.role = role;
    }

@OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="manager")
    public Set<Eventmanager> getEventmanagers() {
        return this.eventmanagers;
    }
    
    public void setEventmanagers(Set<Eventmanager> eventmanagers) {
        this.eventmanagers = eventmanagers;
    }



public boolean equals(Object o) {
         if (this == o)
         return true;
		 if ( (o == null ) )
		 return false;
		 if ( !(o instanceof Manager) )
		 return false;

		 Manager that = ( Manager ) o;

		 return ( (this.getUsername()==that.getUsername()) || ( this.getUsername()!=null && that.getUsername()!=null && this.getUsername().equals(that.getUsername()) ) );

   }

   public int hashCode() {
         int result = 17;

         result = 37 * result + ( getUsername() == null ? 0 : this.getUsername().hashCode() );

         return result;
     }


}

