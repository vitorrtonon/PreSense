/*Copyright (c) 2015-2016 presense@presense.com All Rights Reserved.
 This software is the confidential and proprietary information of gmail.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with presense@presense.com*/

package com.presense.dadjf5a027tja9;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;




/**
 * Person generated by hbm2java
 */
@Entity
@Table(name="person"
    ,schema="public"
)
public class Person  implements java.io.Serializable
 {


private long personId;
private String name;
private Set<Beacon> beacons = new HashSet<Beacon>(0);
private Set<Attendance> attendances = new HashSet<Attendance>(0);
private Set<Personevent> personevents = new HashSet<Personevent>(0);

    public Person() {
    }



     @Id 

    

    @Column(name="person_id", nullable=false)
    public long getPersonId() {
        return this.personId;
    }
    
    public void setPersonId(long personId) {
        this.personId = personId;
    }

    

    @Column(name="name")
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

@OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="person")
    public Set<Beacon> getBeacons() {
        return this.beacons;
    }
    
    public void setBeacons(Set<Beacon> beacons) {
        this.beacons = beacons;
    }

@OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="person")
    public Set<Attendance> getAttendances() {
        return this.attendances;
    }
    
    public void setAttendances(Set<Attendance> attendances) {
        this.attendances = attendances;
    }

@OneToMany(fetch=FetchType.LAZY, cascade = {CascadeType.ALL}, mappedBy="person")
    public Set<Personevent> getPersonevents() {
        return this.personevents;
    }
    
    public void setPersonevents(Set<Personevent> personevents) {
        this.personevents = personevents;
    }



public boolean equals(Object o) {
         if (this == o)
         return true;
		 if ( (o == null ) )
		 return false;
		 if ( !(o instanceof Person) )
		 return false;

		 Person that = ( Person ) o;

		 return (this.getPersonId()==that.getPersonId());

   }

   public int hashCode() {
         int result = 17;

         result = 37 * result + (int) this.getPersonId();

         return result;
     }


}

